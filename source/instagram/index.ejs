---
layout: post
slug: "instagram"
title: "相冊"
noDate: "true"
comments: "false"
---
<script>
(function(u){var l;"undefined"!==typeof window?l=window:"undefined"!==typeof self&&(l=self);l.lazyload=u()})(function(){return function l(n,k,e){function r(g,m){if(!k[g]){if(!n[g]){var f="function"==typeof require&&require;if(!m&&f)return f(g,!0);if(t)return t(g,!0);f=Error("Cannot find module '"+g+"'");throw f.code="MODULE_NOT_FOUND",f;}f=k[g]={exports:{}};n[g][0].call(f.exports,function(e){var c=n[g][1][e];return r(c?c:e)},f,f.exports,l,n,k,e)}return k[g].exports}for(var t="function"==typeof require&&
require,m=0;m<e.length;m++)r(e[m]);return r}({1:[function(l,n,k){(function(e){function r(c){-1===k.call(p,c)&&p.push(c)}function t(c){function b(b){var d;d="function"===typeof c.src?c.src(b):b.getAttribute(c.src);d&&(b.src=d);b.setAttribute("data-lzled",!0);a[k.call(a,b)]=null}c=g({offset:333,src:"data-src",container:!1},c||{});"string"===typeof c.src&&r(c.src);var a=[];return function(h){h.onload=null;h.removeAttribute("onload");h.onerror=null;h.removeAttribute("onerror");-1===k.call(a,h)&&f(h,c,
b)}}function m(c){c="HTML"+c+"Element";if(!1!==c in e){var b=e[c].prototype.getAttribute;e[c].prototype.getAttribute=function(a){if("src"===a){for(var h,d=0,c=p.length;d<c&&!(h=b.call(this,p[d]));d++);return h||b.call(this,a)}return b.call(this,a)}}}function g(c,b){for(var a in c)void 0===b[a]&&(b[a]=c[a]);return b}function k(c){for(var b=this.length;b--&&this[b]!==c;);return b}n.exports=t;var f=l("in-viewport"),p=["data-src"];e.lzld=t();m("Image");m("IFrame")}).call(this,"undefined"!==typeof global?
global:"undefined"!==typeof self?self:"undefined"!==typeof window?window:{})},{"in-viewport":2}],2:[function(l,n,k){(function(e){function k(b,a,h){b.attachEvent?b.attachEvent("on"+a,h):b.addEventListener(a,h,!1)}function l(b,a,h){var d;return function(){var c=this,e=arguments,w=h&&!d;clearTimeout(d);d=setTimeout(function(){d=null;h||b.apply(c,e)},a);w&&b.apply(c,e)}}function m(b){function a(b,a,c){return{watch:function(){d.add(b,a,c)},dispose:function(){d.remove(b)}}}function h(a,d){if(!(c(e.document.documentElement,
a)&&c(e.document.documentElement,b)&&a.offsetWidth&&a.offsetHeight))return!1;var h=a.getBoundingClientRect(),f,q,k,g;b===e.document.body?(f=-d,q=-d,k=e.document.documentElement.clientWidth+d,g=e.document.documentElement.clientHeight+d):(g=b.getBoundingClientRect(),f=g.top-d,q=g.left-d,k=g.right+d,g=g.bottom+d);return h.right>=q&&h.left<=k&&h.bottom>=f&&h.top<=g}var d=g(),q=b===e.document.body?e:b,f=l(d.checkAll(function(b,a,c){h(b,a)&&(d.remove(b),c(b))}),15);k(q,"scroll",f);q===e&&k(e,"resize",f);
p&&v(d,b,f);setInterval(f,150);return{container:b,isInViewport:function(b,d,c){if(!c)return h(b,d);b=a(b,d,c);b.watch();return b}}}function g(){function b(b){for(var a=c.length-1;0<=a;a--)if(c[a][0]===b)return a;return-1}function a(a){return-1!==b(a)}var c=[];return{add:function(b,e,f){a(b)||c.push([b,e,f])},remove:function(a){a=b(a);-1!==a&&c.splice(a,1)},isWatched:a,checkAll:function(b){return function(){for(var a=c.length-1;0<=a;a--)b.apply(this,c[a])}}}}function v(b,a,c){function d(a){a=g.call([],
Array.prototype.slice.call(a.addedNodes),a.target);return 0<f.call(a,b.isWatched).length}var e=new MutationObserver(function(a){!0===a.some(d)&&setTimeout(c,0)}),f=Array.prototype.filter,g=Array.prototype.concat;e.observe(a,{childList:!0,subtree:!0,attributes:!0})}n.exports=function(b,a,c){var d=e.document.body;if(void 0===a||"function"===typeof a)c=a,a={};d=a.container||d;a=a.offset||0;for(var g=0;g<f.length;g++)if(f[g].container===d)return f[g].isInViewport(b,a,c);return f[f.push(m(d))-1].isInViewport(b,
a,c)};var f=[],p="function"===typeof e.MutationObserver,c=e.document.documentElement.compareDocumentPosition?function(b,a){return!!(b.compareDocumentPosition(a)&16)}:e.document.documentElement.contains?function(b,a){return b!==a&&(b.contains?b.contains(a):!1)}:function(b,a){for(;a=a.parentNode;)if(a===b)return!0;return!1}}).call(this,"undefined"!==typeof global?global:"undefined"!==typeof self?self:"undefined"!==typeof window?window:{})},{}]},{},[1])(1)});
    var lazy = lazyload({
      container: document.getElementsByTagName('body')[0]
    });
</script>
<style>
    #post-instagram{
        .article-entry{
            padding-right: 0;
        }
        padding: 30px;
    }
    .instagram{
        position: relative;
        min-height: 500px;
    }
  .instagram img {
    width: 100%;
  }
    .instagram .year {
        font-size: 16px;
    }
    .instagram .open-ins{
        padding: 10px 0;
        color: #cdcdcd;
        &:hover{
            color: #657b83;
        }
    }
    .instagram .year{
        display: inline;
    }
    .instagram .thumb {
        width: 25%;
        padding: 5px;
        height: 0;
        padding-bottom: 25%;
        position: relative;
        display: inline-block;
        text-align: center;
    }
    .instagram .album h1 em{
        font-style: normal;
        font-size: 14px;
        margin-left: 10px;
    }
    .instagram .album ul{
        clear: both;
        width: 100%;
        text-align: left;
    }
    .instagram .album li{
        list-style: none;
        display: inline-block;
        box-sizing: border-box;
        padding: 0 5px;
        margin-bottom: -10px;
        height: 0;
        width: 25%;
        position: relative;
        padding-bottom: 25%;
        &:before{
            display: none;
        }
    }
    .instagram .album div.img-box{
        position: absolute;
        width: 90%;
        height: 90%;
        -webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);
        -moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);
        box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);
    }
    .instagram .album div.img-box img{
        width: 100%;
        height: 100%;
        position: absolute;
        z-index: 2;
    }
    .instagram .album div.img-box .img-bg{
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0px;
        width: 100%;
        margin: -5px;
        padding: 5px;
        -webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);
        -moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);
        box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);
        -webkit-transition: all 0.15s ease-out 0.1s;
        -moz-transition: all 0.15s ease-out 0.1s;
        -o-transition: all 0.15s ease-out 0.1s;
        transition: all 0.15s ease-out 0.1s;
        opacity: 0.2;
        cursor: pointer;
        display: block;
        z-index: 3;
    }
    .instagram .album div.img-box .icon {
        font-size: 14px;
        position: absolute;
        left: 50%;
        top: 50%;
        margin-left: -7px;
        margin-top: -7px;
        color: #999;
        z-index: 1;
    }
    .instagram .album div.img-box .img-bg:hover{
        opacity: 0;
    }
    .photos-btn-wrap {
        border-bottom: 1px solid #e5e5e5;
        margin-bottom: 20px;
    }
    .photos-btn {
        font-size: 16px;
        color: #333;
        background: #fff;
        margin-bottom: -4px;
        padding: 5px 8px 3px;
    }
    .photos-btn.active {
        color: #08c;
        border: 1px solid #e5e5e5;
        border-bottom: 5px solid #fff;
    }
    @media screen and (max-width:600px) {
        .instagram .thumb {
            width: 50%;
            padding-bottom: 50%;
        }
        .instagram .album li {
            width: 100%;
            position: relative;
            padding-bottom: 100%;
            text-align: center;
        }
        .instagram .album div.img-box{
            margin: 0;
            width: 90%;
            height: 90%;
        }
    }
</style>


<div class="instagram itemscope itemtype="http://schema.org/ImageGallery">
    <a href="https://www.instagram.com/raysmond29/" target="_blank" class="open-ins">圖片來源于我的Instagram，正在加载中…</a>
</div>

<script>
var initPhotoSwipeFromDOM = function(gallerySelector) {
  // parse slide data (url, title, size ...) from DOM elements
  // (children of gallerySelector)
  var parseThumbnailElements = function(el) {
    el = el.parentNode.parentNode;
    var thumbElements = el.getElementsByClassName('thumb'),
      numNodes = thumbElements.length,
      items = [],
      figureEl,
      linkEl,
      size,
      type,     // video or not
      target,
      item;
    for (var i = 0; i < numNodes; i++) {
      figureEl = thumbElements[i]; // <figure> element
      // include only element nodes
      if (figureEl.nodeType !== 1) {
        continue;
      }
      linkEl = figureEl.children[0]; // <a> element
      size = linkEl.getAttribute('data-size').split('x');
      type = linkEl.getAttribute('data-type');
      target = linkEl.getAttribute('data-target');
      // create slide object
      item = {
        src: linkEl.getAttribute('href'),
        w: parseInt(size[0], 10),
        h: parseInt(size[1], 10)
      };
      if (figureEl.children.length > 1) {
        // <figcaption> content
        item.title = figureEl.children[1].innerHTML;
      }
      if (linkEl.children.length > 0) {
        // <img> thumbnail element, retrieving thumbnail url
        item.msrc = linkEl.children[0].getAttribute('src');
        item.type = type;
        item.target = target;
        item.html = '<video src="'+target+'" controls="controls" autoplay="autoplay"></video>';
        if (type === 'video') {
            //item.src = null;
        }
      }
      item.el = figureEl; // save link to element for getThumbBoundsFn
      items.push(item);
    }
    return items;
  };
  // find nearest parent element
  var closest = function closest(el, fn) {
    return el && (fn(el) ? el : closest(el.parentNode, fn));
  };
  // triggers when user clicks on thumbnail
  var onThumbnailsClick = function(e) {
    e = e || window.event;
    e.preventDefault ? e.preventDefault() : e.returnValue = false;
    var eTarget = e.target || e.srcElement;
    // find root element of slide
    var clickedListItem = closest(eTarget, function(el) {
      return (el.tagName && el.tagName.toUpperCase() === 'FIGURE');
    });
    if (!clickedListItem) {
      return;
    }
    // find index of clicked item by looping through all child nodes
    // alternatively, you may define index via data- attribute
    var clickedGallery = clickedListItem.parentNode,
      // childNodes = clickedListItem.parentNode.childNodes,
      // numChildNodes = childNodes.length,
      childNodes = document.getElementsByClassName('thumb'),
      numChildNodes = childNodes.length,
      nodeIndex = 0,
      index;
    for (var i = 0; i < numChildNodes; i++) {
      if (childNodes[i].nodeType !== 1) {
        continue;
      }
      if (childNodes[i] === clickedListItem) {
        index = nodeIndex;
        break;
      }
      nodeIndex++;
    }
    if (index >= 0) {
      // open PhotoSwipe if valid index found
      openPhotoSwipe(index, clickedGallery);
    }
    return false;
  };
  // parse picture index and gallery index from URL (#&pid=1&gid=2)
  var photoswipeParseHash = function() {
    var hash = window.location.hash.substring(1),
      params = {};
    if (hash.length < 5) {
      return params;
    }
    var vars = hash.split('&');
    for (var i = 0; i < vars.length; i++) {
      if (!vars[i]) {
        continue;
      }
      var pair = vars[i].split('=');
      if (pair.length < 2) {
        continue;
      }
      params[pair[0]] = pair[1];
    }
    if (params.gid) {
      params.gid = parseInt(params.gid, 10);
    }
    return params;
  };
  var openPhotoSwipe = function(index, galleryElement, disableAnimation, fromURL) {
    var pswpElement = document.querySelectorAll('.pswp')[0],
      gallery,
      options,
      items;
    items = parseThumbnailElements(galleryElement);
    // define options (if needed)
    options = {
      // define gallery index (for URL)
      galleryUID: galleryElement.getAttribute('data-pswp-uid'),
      getThumbBoundsFn: function(index) {
        // See Options -> getThumbBoundsFn section of documentation for more info
        var thumbnail = items[index].el.getElementsByTagName('img')[0], // find thumbnail
        pageYScroll = window.pageYOffset || document.documentElement.scrollTop,
        rect = thumbnail.getBoundingClientRect();
        return {
          x: rect.left,
          y: rect.top + pageYScroll,
          w: rect.width
        };
      }
    };
    // PhotoSwipe opened from URL
    if (fromURL) {
      if (options.galleryPIDs) {
        // parse real index when custom PIDs are used
        // http://photoswipe.com/documentation/faq.html#custom-pid-in-url
        for (var j = 0; j < items.length; j++) {
          if (items[j].pid == index) {
            options.index = j;
            break;
          }
        }
      } else {
        // in URL indexes start from 1
        options.index = parseInt(index, 10) - 1;
      }
    } else {
      options.index = parseInt(index, 10);
    }
    // exit if index not found
    if (isNaN(options.index)) {
      return;
    }
    if (disableAnimation) {
      options.showAnimationDuration = 0;
    }
    // Pass data to PhotoSwipe and initialize it
    gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);
    gallery.init();
    var $tempVideo;
    var stopVideoHandle = function() {
        if ($tempVideo) {
            $tempVideo.remove();
            $tempVideo = null;
        }
    }
    var changeHandle = function() {
        var item = gallery.currItem;
        stopVideoHandle();
        if (item.type === 'video') {
            console.log(item)
            var $ctn = item.container;
            var style = $ctn.getElementsByClassName('pswp__img')[0].style;
            var $video = document.createElement('video');
            $video.setAttribute('autoplay', 'autoplay');
            $video.setAttribute('controls', 'controls');
            $video.setAttribute('src', item.target);
            $video.style.width = style.width;
            $video.style.height = style.height;
            $video.style.position = 'absolute';
            $video.style.zIndex = 2;
            $tempVideo = $video;
            $ctn.appendChild($video);
        }
    }
    gallery.listen('initialZoomIn', changeHandle);
    gallery.listen('afterChange', changeHandle);
    gallery.listen('initialZoomOut', stopVideoHandle);
  };
  // loop through all gallery elements and bind events
  var galleryElements = document.querySelectorAll(gallerySelector);
  for (var i = 0, l = galleryElements.length; i < l; i++) {
    galleryElements[i].setAttribute('data-pswp-uid', i + 1);
    galleryElements[i].onclick = onThumbnailsClick;
  }
  // Parse URL and open gallery if it contains #&pid=3&gid=1
  var hashData = photoswipeParseHash();
  if (hashData.pid && hashData.gid) {
    openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);
  }
};
var Viewer = (function() {
  function init() {
    initPhotoSwipeFromDOM('.photos');
  }
  return {
    init: init
  }
})();
var _collection = [];
var _count = 0;
function addMask(elem) {
    var rect = elem.getBoundingClientRect();
    var style = getComputedStyle(elem, null);
    var mask = document.createElement('i');
    mask.className = 'icon-film';
    mask.style.color = '#fff';
    mask.style.fontSize = '26px';
    mask.style.position = 'absolute';
    mask.style.right = '10px';
    mask.style.bottom = '10px';
    mask.style.zIndex = 1;
    elem.parentNode.appendChild(mask);
}
var createVideoIncon = function() {
    var $videoImg = $('.thumb a[data-type="video"]');
    for (var i = 0, len = $videoImg.length; i < len; i++) {
        addMask($videoImg[i])
    }
}
var render = function(res) {
    var ulTmpl = "";
    for (var j = 0, len2 = res.list.length; j < len2; j++) {
        var data = res.list[j].arr;
        var liTmpl = "";
        for (var i = 0, len = data.link.length; i < len; i++) {
            // var minSrc = 'http://litten.me/ins-min/' + data.link[i] + '.min.jpg';

            //var src = 'http://litten.me/ins/' + data.link[i];
            //var type = data.type[i];
            //var target = (src + (type === 'video' ? '.mp4' : '.jpg'));
            //src += '.jpg';
            var minSrc = data.link[i];
            var src = data.src[i];
            var type = data.type[i];
            var target = src;
            if(type==='video'){
              target=data.video[i];
            }
            var dataSize = data.size[i];
            liTmpl += '<figure class="thumb" itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">\
                  <a href="'+src+'" itemprop="contentUrl" data-size="'+dataSize+'" data-type="' + type + '" data-target="' + target + '">\
                    <img data-type="' + type + '" data-src="'+minSrc+'" src="'+minSrc+'" itemprop="thumbnail" onload="lazy(this)"/>\
                  </a>\
                  <figcaption style="display:none" itemprop="caption description">'+data.text[i] +' <a href="https://www.instagram.com/p/'+data.code[i]+'" target="_blank">Instagram鏈接</a></figcaption>\
              </figure>';
        }
        ulTmpl = ulTmpl + '<section class="archives album"><h1 class="year">' + data.year + '<em>' + data.month + '月</em></h1>\
            <ul class="img-box-ul">' + liTmpl + '</ul>\
            </section>';
    }
    var $wrap = $('<div class="photos" itemscope itemtype="http://schema.org/ImageGallery"></div>');
    $wrap.appendTo($(".instagram"));
    $(ulTmpl).appendTo($wrap);
    createVideoIncon();
    Viewer.init();
    //$("a[rel=example_group]").fancybox();
}
var replacer = function(str) {
    var arr = str.split("/");
    return "/assets/ins/" + arr[arr.length - 1];
}
var ctrler = function(data) {
    var imgObj = {};
    for (var i = 0, len = data.length; i < len; i++) {
        var y = data[i].y;
        var m = data[i].m;
        var src = replacer(data[i].src);
        var text = data[i].text;
        var key = y + "" + ((m + "").length == 1 ? "0" + m : m);
        if (imgObj[key]) {
            imgObj[key].srclist.push(src);
            imgObj[key].text.push(text);
        } else {
            imgObj[key] = {
                year: y,
                month: m,
                srclist: [src],
                text: [text]
            }
        }
    }
    render(imgObj);
}

var result = [];
var dataFile = "http://7b1fa0.com1.z0.glb.clouddn.com/instagram/images/result.json?"+Math.random();
var dataDir = "http://7b1fa0.com1.z0.glb.clouddn.com/instagram/images/";

function loadInstagram() {
    var xmlhttp = new XMLHttpRequest();

    xmlhttp.onreadystatechange = function() {
        if (xmlhttp.readyState == XMLHttpRequest.DONE ) {
           if (xmlhttp.status == 200) {
               showInstagram(eval('('+xmlhttp.responseText+')'));
           }
           else if (xmlhttp.status == 400) {
              alert('There was an error 400');
           }
           else {
               alert('something else other than 200 was returned');
           }
        }
    };

    xmlhttp.open("GET", dataFile, true);
    xmlhttp.send();
}

function compare(a,b) {
  if (a.date > b.date)
    return -1;
  if (a.date < b.date)
    return 1;
  return 0;
}

function showInstagram(data){
  data.sort(compare);
  for(var i=0;i<data.length;i++){
    addPic(data[i]);
  }
}

function addPic(item){
  var date = new Date(item.date*1000);
  var dateKey = date.toISOString().slice(0, 7);
  var subArr = null;

  for(var i=0;i<result.length;i++){
    if(result[i].date == dateKey){
      subArr = result[i];
      break;
    }
  }

  if(subArr === null){
    subArr = {
      date: dateKey,
      arr: {
        year: date.getFullYear(),
        month: date.getMonth()+1,
        src: [],
        link: [],
        text: [],
        type: [],
        code: [],
        video: [],
        size: []
      }
    };
    result.push(subArr);
  }

  var picName = item.display_src.match(/[0-9_]*_n.jpg/)[0];

  subArr.arr.src.push(dataDir+picName);
  subArr.arr.link.push(dataDir+picName+'!640x640');
  subArr.arr.text.push(item.caption);
  subArr.arr.code.push(item.code);
  subArr.arr.size.push(item.dimensions.width+'x'+item.dimensions.height);
  subArr.arr.type.push(item.is_video ? 'video' : 'image');
  subArr.arr.video.push(item.is_video ? item.video_url : '');
}


loadInstagram();

// module.exports = {
var Ins = {
    init: function() {
        render({
            "list": result
        })
        $(".open-ins").html("圖片來源于我的Instagram...");
    }
}
window.onload = function() {
    Ins.init();
}
</script>
